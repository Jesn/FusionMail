version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: fusionmail-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fusionmail
      POSTGRES_USER: fusionmail
      POSTGRES_PASSWORD: ${DB_PASSWORD:-fusionmail_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fusionmail-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fusionmail"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: fusionmail-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-fusionmail_redis_password}
    volumes:
      - redis_data:/data
    networks:
      - fusionmail-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FusionMail 应用（前后端一体）
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fusionmail-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      # 数据库配置
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: fusionmail
      DB_PASSWORD: ${DB_PASSWORD:-fusionmail_password}
      DB_NAME: fusionmail
      DB_SSLMODE: disable
      
      # Redis 配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-fusionmail_redis_password}
      REDIS_DB: 0
      
      # 服务器配置
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      
      # JWT 配置
      JWT_SECRET: ${JWT_SECRET:-change-this-secret-in-production}
      JWT_EXPIRY: 24h
      
      # 加密配置
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-change-this-32-byte-key-prod}
      
      # 存储配置
      STORAGE_TYPE: local
      STORAGE_PATH: /data/attachments
      
      # 同步配置
      SYNC_WORKER_COUNT: 5
      SYNC_DEFAULT_INTERVAL: 5
      
      # Gin 模式
      GIN_MODE: release
    volumes:
      - attachments_data:/data/attachments
    networks:
      - fusionmail-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

networks:
  fusionmail-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  attachments_data:
    driver: local
